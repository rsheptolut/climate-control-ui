{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api/climatecontrol.api.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/device-control/device-control.component.ts","./src/app/device-control/device-control.component.html","./src/app/device-list/device-list.component.ts","./src/app/device-list/device-list.component.html","./src/app/device-settings/device-settings.component.ts","./src/app/device-settings/device-settings.component.html","./src/app/utils/api-client.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Settings } from '../data/settings';\nimport { ApiClient } from '../utils/api-client';\nimport { Injectable } from '@angular/core';\nimport { DeviceState } from '../data/device-state';\n\n@Injectable()\nexport class ClimateControlApi {\n    constructor(private apiClient: ApiClient) {\n    }\n\n    public async getDevice(deviceId: string): Promise<DeviceState> {\n        return await this.apiClient.get<DeviceState>(`device-state/${deviceId}`);\n    }\n\n    public async saveSettings(settings: Settings): Promise<void> {\n        await this.apiClient.post<void>(`settings`, settings);\n    }\n\n    public async turnOnOff(deviceId: string, turnOn: boolean): Promise<DeviceState> {\n        return await this.apiClient.get<DeviceState>(`turnOnOff/${deviceId}`, { command: turnOn ? 'TurnOn' : 'TurnOff' });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DeviceControlComponent } from './device-control/device-control.component';\nimport { DeviceListComponent } from './device-list/device-list.component';\nimport { DeviceSettingsComponent } from './device-settings/device-settings.component';\n\nconst routes: Routes = [\n  {\n    path: 'devices',\n    component: DeviceListComponent,\n  },\n  {\n    path: 'device/:id',\n    component: DeviceControlComponent,\n  },\n  // {\n  //   path: 'device/{:id}/settings',\n  //   component: DeviceSettingsComponent,\n  // },\n  {\n      path: '**',\n      redirectTo: '/devices',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ChangeDetectorRef } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public mobileQuery: MediaQueryList;\n  public portraitQuery: MediaQueryList;\n  private mobileQueryListener: () => void;\n  private portraitQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this.mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this.mobileQueryListener);\n    this.portraitQuery = media.matchMedia('(orientation: portrait)');\n    this.portraitQueryListener = () => changeDetectorRef.detectChanges();\n    this.portraitQuery.addListener(this.portraitQueryListener);\n  }\n\n  public get title(): string {\n    return document.title;\n  }\n}\n","<div class=\"container\" [class.is-mobile]=\"mobileQuery.matches\">\n  <mat-toolbar color=\"primary\" class=\"toolbar\">\n      <button mat-icon-button (click)=\"snav.toggle()\"><mat-icon>menu</mat-icon></button>\n      <h1 class=\"app-name\" (click)=\"snav.toggle()\">{{title}}</h1>\n      <div class=\"grower\"></div>\n  </mat-toolbar>\n\n  <mat-sidenav-container class=\"example-sidenav-container\"\n                         [style.marginTop.px]=\"mobileQuery.matches ? 56 : 0\">\n      <mat-sidenav #snav [mode]=\"'over'\"\n                  [fixedInViewport]=\"mobileQuery.matches\" fixedTopGap=\"56\">\n          <mat-nav-list>\n            <a mat-list-item routerLink=\"devices\">Devices</a>\n          </mat-nav-list>\n      </mat-sidenav>\n  \n      <mat-sidenav-content>\n        <router-outlet></router-outlet>\n      </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { FormsModule } from '@angular/forms';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { DeviceListComponent } from './device-list/device-list.component';\nimport { DeviceControlComponent } from './device-control/device-control.component';\nimport { DeviceSettingsComponent } from './device-settings/device-settings.component';\nimport { ApiClient } from './utils/api-client';\nimport { ClimateControlApi } from './api/climatecontrol.api';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DeviceListComponent,\n    DeviceControlComponent,\n    DeviceSettingsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatProgressSpinnerModule,\n    MatInputModule,\n    MatCardModule,\n    MatChipsModule,\n    MatListModule,\n    MatCheckboxModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatRadioModule,\n  ],\n  providers: [\n    ApiClient,\n    ClimateControlApi,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ChangeDetectorRef, ViewChild, AfterViewInit, QueryList, ViewChildren } from '@angular/core';\nimport { Settings } from '../data/settings';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ClimateControlApi } from '../api/climatecontrol.api';\nimport { DeviceState } from '../data/device-state';\nimport { AppComponent } from '../app.component';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { NgForm } from '@angular/forms';\nimport { pipe } from 'rxjs';\nimport { debounceTime, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-device-control',\n  templateUrl: './device-control.component.html',\n  styleUrls: ['./device-control.component.scss']\n})\nexport class DeviceControlComponent implements AfterViewInit {\n  @ViewChildren('form')\n  public forms: QueryList<NgForm>;\n  public device: DeviceState;\n  public deviceId: string;\n  public mobileQuery: MediaQueryList;\n  public portraitQuery: MediaQueryList;\n  private mobileQueryListener: () => void;\n  private portraitQueryListener: () => void;\n  public dontSaveSettings = true;\n\n  constructor(\n    activatedRoute: ActivatedRoute,\n    private climateControlApi: ClimateControlApi,\n    private router: Router,\n    media: MediaMatcher,\n    changeDetectorRef: ChangeDetectorRef,\n  ) {\n    activatedRoute.paramMap.subscribe(async p => {\n      this.deviceId = p.get('id');\n      this.device = await climateControlApi.getDevice(this.deviceId);\n      setTimeout(() => this.dontSaveSettings = false, 1000);\n    });\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this.mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this.mobileQueryListener);\n    this.portraitQuery = media.matchMedia('(orientation: portrait)');\n    this.portraitQueryListener = () => changeDetectorRef.detectChanges();\n    this.portraitQuery.addListener(this.portraitQueryListener);\n  }\n\n  ngAfterViewInit(): void {\n    this.forms.changes.subscribe((forms) => {\n      this.forms.first.valueChanges.pipe(\n        debounceTime(500),\n        switchMap(v => this.saveSettings()),\n      ).subscribe(() => {});\n    });\n  }\n\n  public goToSettings(): void {\n    this.router.navigate([`device/${this.deviceId}/settings`]);\n  }\n\n  public async turnOnOff(turnOn: boolean): Promise<void> {\n    await this.climateControlApi.turnOnOff(this.deviceId, turnOn);\n  }\n\n  public async saveSettings(): Promise<void> {\n    if (!this.dontSaveSettings) {\n      this.climateControlApi.saveSettings(this.device.settings);\n    }\n  }\n}\n","<mat-spinner *ngIf=\"!device\"></mat-spinner>\n\n<mat-card *ngIf=\"device\" class=\"card\">\n    <div class=\"page-header\">\n        <h1>{{device.settings.name}}</h1>\n        \n        <button mat-icon-button (click)=\"goToSettings()\"><mat-icon>settings</mat-icon></button>\n    </div>\n\n    <br/>\n    <div class=\"temperature\">\n        <div class=\"temperature__value\">\n            {{device.state.lastAverageTemperature}}\n        </div>\n    </div>\n\n    <br/>\n    <div class=\"aircon\">\n        <div class=\"aircon__heading\">A/C</div>\n        <div class=\"aircon__state\"></div>\n        <button mat-raised-button color=\"primary\" (click)=\"turnOnOff(true)\">Turn on now</button>\n        &nbsp;&nbsp;\n        <button mat-raised-button color=\"accent\" (click)=\"turnOnOff(false)\">Turn off now</button>\n    </div>\n\n    <form #form=\"ngForm\">\n        <br/>\n        <div class=\"row\">\n            <mat-slide-toggle name=\"automationOn\" [(ngModel)]=\"device.settings.automationOn\">Automation (now {{device.settings.automationOn ? 'ON' : 'OFF'}})</mat-slide-toggle>\n        </div>\n        \n        <br/>\n        <br/>\n        <div class=\"row\">\n            <mat-slide-toggle name=\"onDuringDay\" [(ngModel)]=\"device.settings.onDuringDay\">Turn on during day ({{device.settings.onDuringDay ? 'YES' : 'NO'}})</mat-slide-toggle>\n            <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n            <mat-form-field class=\"inline\">\n                <mat-label>Day start time:</mat-label>\n                <input matInput type=\"time\" id=\"dayTimeStart\" name=\"dayTimeStart\" min=\"00:00\" max=\"24:00\" [(ngModel)]=\"device.settings.dayTimeStart\">\n            </mat-form-field>\n        </div>\n        <div class=\"row\">\n            <p>Keep day temperature from:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n            <mat-form-field class=\"inline\">\n                <mat-label>Turn on if below</mat-label>\n                <input name=\"dayTempOn\" matInput [(ngModel)]=\"device.settings.dayTempOn\" type=\"number\" min=\"1\" max=\"50\">\n            </mat-form-field>\n            <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n            <mat-form-field class=\"inline\">\n                <mat-label>Turn off if above</mat-label>\n                <input name=\"dayTempOff\" matInput [(ngModel)]=\"device.settings.dayTempOff\" type=\"number\" min=\"1\" max=\"50\">\n            </mat-form-field>\n        </div>\n        \n        <br/>\n        <br/>\n        <div class=\"row\">\n            <mat-slide-toggle name=\"onDuringNight\" [(ngModel)]=\"device.settings.onDuringNight\">Turn on during night ({{device.settings.onDuringNight ? 'YES' : 'NO'}})</mat-slide-toggle>     <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n            <mat-form-field class=\"inline\">\n                <mat-label>Night start time:</mat-label>\n                <input matInput type=\"time\" id=\"nightTimeStart\" name=\"nightTimeStart\" min=\"00:00\" max=\"24:00\" [(ngModel)]=\"device.settings.nightTimeStart\">\n            </mat-form-field>\n        </div>\n        <div class=\"row\">\n            <p>Keep night temperature from:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n            <mat-form-field class=\"inline\">\n                <mat-label>Turn on if below</mat-label>\n                <input name=\"nightTempOn\" matInput [(ngModel)]=\"device.settings.nightTempOn\" type=\"number\" min=\"1\" max=\"50\">\n            </mat-form-field>\n            <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n            <mat-form-field class=\"inline\">\n                <mat-label>Turn off if above</mat-label>\n                <input name=\"nightTempOff\" matInput [(ngModel)]=\"device.settings.nightTempOff\" type=\"number\" min=\"1\" max=\"50\">\n            </mat-form-field>\n        </div>\n        \n        <mat-form-field floatLabel=\"always\">\n            <mat-label>Reading override (dbg)</mat-label>\n            <input name=\"fakeAverageTemperature\" matInput [(ngModel)]=\"device.settings.fakeAverageTemperature\" type=\"number\" max=\"50\">\n        </mat-form-field>\n    </form>\n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-device-list',\n  templateUrl: './device-list.component.html',\n  styleUrls: ['./device-list.component.scss']\n})\nexport class DeviceListComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.router.navigate(['device', 'my-only-device']);\n  }\n}\n","<p>device-list works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-device-settings',\n  templateUrl: './device-settings.component.html',\n  styleUrls: ['./device-settings.component.scss']\n})\nexport class DeviceSettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>device-settings works!</p>\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ApiClient {\n    private readonly apiUrl = environment.apiUrl;\n    private headers: HttpHeaders;\n\n    constructor(\n        private readonly http: HttpClient,\n    ) {\n        this.updateHeaders();\n    }\n\n    /**\n     * Executes an HTTP GET request to the API.\n     * @param apiRelativePath Local path to an API method.\n     * @param query An object to convert to the query string, if needed.\n     */\n    public async get<T>(apiRelativePath: string, query?: object): Promise<T> {\n        return await this.sendRequest(this.http.get<T>(this.apiUrl + apiRelativePath + this.getQueryStr(query), { headers: this.headers }));\n    }\n\n    /**\n     * Executes an HTTP POST request to the API.\n     * @param apiRelativePath Local path to an API method.\n     * @param body Request body (will be serialized as JSON automatically).\n     */\n    public async post<T>(apiRelativePath: string, body: any = null): Promise<T> {\n        return await this.sendRequest(this.http.post<T>(this.apiUrl + apiRelativePath, body, { headers: this.headers }));\n    }\n\n    /**\n     * Executes an HTTP PUT request to the API.\n     * @param apiRelativePath Local path to an API method.\n     * @param body Request body (will be serialized as JSON automatically).\n     */\n    public async put<T>(apiRelativePath: string, body: any = null): Promise<T> {\n        return await this.sendRequest(this.http.put<T>(this.apiUrl + apiRelativePath, body, { headers: this.headers }));\n    }\n\n    /**\n     * Executes an HTTP PUT request to the API.\n     * @param apiRelativePath Local path to an API method.\n     */\n    public async delete(apiRelativePath: string): Promise<void> {\n        await this.sendRequest(this.http.delete(this.apiUrl + apiRelativePath, { headers: this.headers }));\n    }\n\n    /**\n     * Updates the header object\n     */\n    private updateHeaders(): void {\n        this.headers = new HttpHeaders({\n            'Content-Type': 'application/json'\n        });\n    }\n\n    /**\n     * Converts the specified object to a properly escaped query string.\n     * @param query A simple flat object with properties and values that will be converted to keys and values of a query string\n     * @returns A query string\n     */\n    private getQueryStr(query: object): string {\n        let str = '';\n        if (!query) {\n            return str;\n        }\n        for (const key of Object.keys(query)) {\n            const value = query[key];\n            if (value || value === 0 || value === false) {\n                const array = Array.isArray(value) ? value : [ value ];\n                for (const item of array) {\n                    str += (str ? '&' : '?') + key + '=' + encodeURIComponent(this.getQueryParamStringValue(item));\n                }\n            }\n        }\n        return str;\n    }\n\n    private getQueryParamStringValue(item: any): string {\n        if (item == null) {\n            return '';\n        } else if (item instanceof Date) {\n            return item.toISOString();\n        } else {\n            return item.toString();\n        }\n    }\n\n    /**\n     * Performs the request\n     */\n    private async sendRequest<T>(request: Observable<T>): Promise<T> {\n        return await request.toPromise();\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:7071/api/v1/climatecontrol/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}